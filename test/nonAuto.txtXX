# Character

"asdfasd"
"asdf\"asdf"
'asdfasdf'
'asdfasd\'asdfas'

==>

Script(Character,Character,Character,Character)

# Numeric

1.23
0.23
.23

1.2e34
176e34
.267e34
1.2E34
176E34
.267E34
1.2e+34
176e+34
.267e+34
1.2e-34
176e-34
.267e-34

0x34
0x34.2p34
0x34p34
0x34.2P34
0x34P34
0x34.2P34
0x34P34
0x34.2P34
0x34P34

==>

Script(
    Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,
    Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,
    Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric,Numeric
)

# Integer

123L

==>

Script(Integer)

# Complex

34.7e5i

==>

Script(Complex)

# Identifier

fsadfsd
rew583t
.y657
dfs_fs
sdfs.345
`_%%*@`

==> 

Script(Identifier,Identifier,Identifier,Identifier,Identifier,Identifier)

# call

function(a,d,c=6,...) 45
if(TRUE) 45
if(FALSE) 56 else 56
repeat x <- x + 6
while(TRUE) x <- 6
for(entry in xxx) entry$h[[5]] <- 5
# Apparently I can do a comment in the script

==>

Script(
    FuncDef("function",
        ParamList(Identifier,Identifier,Identifier,"=",Numeric,Identifier),
        Numeric
    ),
    IfExpr("if",Logical,Numeric),
    IfExpr("if",Logical,Numeric,"else",Numeric),
    RepeatExpr("repeat",BinaryExpression(Identifier,"<-",BinaryExpression(Identifier,"+",Numeric))),
    WhileExpr("while",Logical,BinaryExpression(Identifier,"<-",Numeric)),
    ForExpr("for",Identifier,"in",Identifier,BinaryExpression(Index(Component(Identifier,"$",Identifier),"[[",Numeric),"<-",Numeric)),
    Comment()
)

# extra

(x + y) * 5
x + y * 5

==>

Script(
    BinaryExpression(ParenExpression(BinaryExpression(Identifier,"+",Identifier)),"*",Numeric)
    BinaryExpression(Identifier,"+",BinaryExpression(Identifier,"*",Numeric)),
)