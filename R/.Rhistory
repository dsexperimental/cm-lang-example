y <- with(x,{n; 4 + n})
y
y <- with(x,n; 4 + n)
y <- with(x,{print(n); 4 + n})
print(34)
foo <- function(x) { print(x); x + 2}
foo(3)
y <- with(x,foo(n))
y <- (function(n=5) { print(n); n+1})()
y
n <- 100
print(n)
plot(1:n,rnorm(n))
plot(rnorm(100000),rnorm(100000),t="l")
768
dev.list()
plot(1:5,runif(5))
dev.list()
plot(1:5,runif(5))
points(1:5,runif(5),clr="blue")
points(1:5,runif(5),col="blue")
dev.list()
foo <- function() {}
foo <- function() { x <- y + 4; z <- y^n}
codetools::findFuncLocals(foo)
codetools::findGlobals(foo)
codetools::findFuncLocals(foo)
codetools::findFuncLocals("x <- y + 4; z <- y^n")
?findLocals
codetools::findLocals(foo)
codetools::findLocals(x<-34)
expr <- rlang::parse_expr("n <- x + 3")
codetools::findLocals(expr)
?findGlobals
exprs <- rlang::parse_exprs("n <- x + 3; u <<- n+4; x <- x + 1")
codetools::findLocalsList(exprs)
g <<- 4
mean <- 5
lobstr::obj_addr(mean)
lobstr::obj_addr(base::mean)
get("mean")
lobstr::obj_addr(get("mean"))
lobstr::obj_addr(evalq(mean))
lobstr::obj_addr(match.fun("mean")
)
x <- 345
tracemem(x)
y <- x
x <- x + 5
y
x
x <- 345
x <- c(1,2,3)
cat(tracemem(x), "\n")
y <- x
y[[3]] <- 5
x <- 5
y[[2]] <- 6
y[[3]]  <- 4
x
y
x <- c(5,6,7)
x <- "a"
ref(x)
lobstr:ref(x)
lobstr::ref(x)
y <- a
lobstr::ref(x,y)
y <- "a"
lobstr::ref(x,y)
x
y
x <- c("a","a","b","c")
lobstr::ref(x)
lobstr::ref(x, charactyer= TRUE)
lobstr::ref(x, character= TRUE)
library(data.table)
x <- rnorm(10)
y <- rnorm(10)
z <- rnrom(10)
z <- rnorm(10)
df <- data.fram(x=x,y=y,z=z)
df <- data.frame(x=x,y=y,z=z)
dt <- data.table(x=x,y=y,z=z)
df
dy
dt
ref(df,dt)
library(lobstr)
ref(df,dt)
ref(df,dt,numeric=TRUE)
ref(df,dt,character=TRUE)
df2 <- df
dt2 <- dt
df[1,1]
df[1,1] <- 5
df
df2
dt
dt2
ref(dt,dt2)
dt[1,1] = 10
dt
dt2
dt[,w:=3+z]
dt
dt2
dt3 <- dt
dt3
dt2
dt[,u:=8+z]
dt
dt3
memtrace(dt)
mem_trace(dt)
tracemem(dt)
dt[,v:=2+z]
dt3
df
df2
df3 <- ddf
df3 <- df
df$v <- 2+df$z
df
df3
obj_addr(df)
obj_addr(df3)
obj_addr(dt)
obj_addr(dt3)
class(dt)
x <- 4
y <- x
x := 6
?:=
help(":=")
`:--:` <- function(x,y) x+y
5 :--: 7
5 `:--:` 7
`:--:`(5,7)
operators
a <- list(a=1,b=2,c=4)
b <- a
a$c <- 3
a
b
ref(a,b,character=TRUE)
?identical
library(rlang)
help(":=")
e1 <- env(a=1,b=2,c=3)
e2 <- e1
e1
as.list(e1)
as.list(e2)
e1$c = 5
as.list(d2)
as.list(e2)
class(e2)
?class
typeof(e1)
?new.env
e2 <- env(x=1,y=2,z=3)
e1
env_print(e1)
env_print(e2)
identical(e1,e2)
e2 <- env(a=1,b=2,c=3)
e3 <- env(x=1,y=2,z=3)
env_print(e3)
env_print(e2)
env_print(e1)
identical(e1,e2)
as.list(e1)
tracemem(e1)
untracemem(e1)
untracemem()
e1$c = 3
ref(e1)
ref(e1,e2)
identical(e1,e2)
as.list(e1)
as.list(e2)
identical(e1,e2)
env_print(e1)
env_print(e2)
identical(as.list(e1),as.list(e2))
identical(e1,e2)
identical(e1,e2,extptr.as.ref = TRUE)
attributes(e1)
attributes(e2)
identical(e1,e2,attrib.as.set = FALSE)
e3
as.list(e3)
identical(e1,e2)
identical(e1,e3)
identical(e2,e3)
e4 <- e3
identical(e4,e3)
install.packages(digest)
install.packages("digest")
digest::makeRaw(list(a=1,b=2,c=3)
)
digest::makeRaw(e1)
getwd()
choose.files(multi=FALSE)
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("3 <- 4 + g")
analyzeCode("x <- 4 + TRUE")
callType
as.list(astList)
getCallText(astList)
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 4 + TRUE")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 4 + TRUE")
?switch
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 4 + TRUE")
list("t"=4)
list("<-"=4)
list(`<-`=4)
f = "<-"
a <- list(`<-`=4)
a[[f]]
switch("sdf",df=5,7)
analyzeCode("x <- 4 + TRUE")
as.list(parse_expr("x <- 4 + TRUE"))[[1]]
as.list(rlang::parse_expr("x <- 4 + TRUE"))
rlang::is_symbol(as.list(rlang::parse_expr("x <- 4 + TRUE"))[[1]])
rlang::is_symbol(as.list(rlang::parse_expr("if(TRUE) 5 else 6)[[1]])
rlang::is_symbol(as.list(rlang::parse_expr("if(TRUE) 5 else 6))[[1]])
rlang::is_symbol(as.list(rlang::parse_expr("if(TRUE) 5 else 6"))[[1]])
rlang::is_symbol(as.list(rlang::parse_expr("a$g(5"))[[1]])
rlang::is_symbol(as.list(rlang::parse_expr("a$g(5)"))[[1]])
rlang::is_call(as.list(rlang::parse_expr("a$g(5)"))[[1]])
as.list(rlang::parse_expr("ag(5)"))
is_call(rlang::parse_expr("ag(5)"))
irlang::s_call(rlang::parse_expr("ag(5)"))
rlang::is_call(rlang::parse_expr("ag(5)"))
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzCode("x <- 5")
analyzeCode("x <- 5")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
analyzeCode("x <- 5")
debugSource("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
callExprString
outputFunction
argStringVector
analyzeCode("x <- 5")
otuputFunction
outputFunction
debugSource("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
getBinary <- function(callType,argStrings) getOperator("BinaryExpression",callType,argStrings)
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
analyzeCode("x <- 5")
callType
arguments
..1
analyzeCode("x <- 5")
callType
debugSource("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
debugSource("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
debugSource("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("x <- 5")
analyzeCode("foo(4,a=6,g")
analyzeCode("foo(4,a,g")
analyzeCode("if(c == d) x <- x + 1 else x <- x - 1")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("if(c == d) x <- x + 1 else x <- x - 1")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("if(c == d) x <- x + 1 else x <- x - 1")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("if(c == d) x <- x + 1 else x <- x - 1")
analyzeCode("abc\nhgkj")
analyzeCode("34")
analyzeCode("4 + 6\n5 + 7 * 3")
analyzeCode("foo(4,t=7)")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("foo(4,t=7)")
analyzeCode("foo(4,t=7)")
as.list(astList)
callExprString
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("foo(4,t=7)")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("foo(4,t=7)")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("foo(4,t=7)")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("foo(4,t=7)")
analyzeCode("a$g(4,t=7)")
analyzeCode("a$g(4,t=7)")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
analyzeCode("a$g(4,t=7)")
getwd()
setwd("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R")
convertTestFile("test.input.txt","test.txt")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile("test.input.txt","test.txt")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile("test.input.txt","test.txt")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile("test.input.txt","test.txt")
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile("test.input.txt","test.txt")
?choose.files
endsWith
?endsWith
substr("dog",-1)
substr("dog",0,-1)
substr("dog",0,-1)
substring("dog",0,-1)
substring("hello.txt.input",0,nchar("hello.txt.input") - nchar(".input"))
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile()
source("C:/Dave/dev/github/codemirror/codemirrordev/lang-example/R/testGenerator.R")
convertTestFile()
str_match("h&hhhh&hhhh&hh","&h*$")
?str_match
stringr::str_match("h&hhhh&hhhh&hh","&h*$")
stringr::str_match("h&hhhh&hhhh&hh","&h*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[^&(f&)]*&")
stringr::str_match_all("h&hhhhf&hhhh&hh","&[(f&)^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[(f&)^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[(f&)]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&([^&]|(f&))*&")
stringr::str_match("h&hhhhf&hhhh&hh","&((^&)|(f&))*&")
stringr::str_match("h&hhhhf&hhhh&hh","&([hf^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[hf^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[h^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[hf^&]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&(h | f)*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[hf]*&")
stringr::str_match("h&hhhhf&hhhh&hh","&[hf(f&)]*&")
0x6
0X6
0x.5
0x0.5
0x1
0x1.3
0x1.3p5
0x1.3p
0x1.3p1
0x234
0x234.
0x234.p1
0x234.p+1
0x234.p-1
0x234.3p-1
0x234.3P-1
0x234.3P-f
0x23f.fP-f
0x23f.5P-f
0x23f.fP-6
7.L
7L
7.0L
class(7.0L)
7.0e7L
7.34e7L
7.34e-7L
class(7.34e-7L)
0x56L
1.234e4L
100e-1
100e-1L
class(100e-1)
class(100e-1L)
class(100e-4L)
0x5i
5I
5i
.6ert = 6
.e6rt = 6
.34T345
foo <- function(
r <- x
rlang::parse_exprs("y <- x\n + 6")
rlang::parse_exprs("y <- x + 6")
rlang::parse_exprs("y <- x + 6;;;")
rlang::parse_exprs("y <- x + 6;")
rlang::parse_exprs(";")
rlang::parse_exprs("")
rlang::parse_exprs("   ")
rlang::parse_exprs("while(r == 5) { x <- 7 }; ")
rlang::parse_exprs("while(r == 5) { x <- 7 } ")
rlang::parse_exprs("while(r == 5) { x <- 7 } f <- 6")
rlang::parse_exprs("while(r == 5) { x <- 7 }; f <- 6")
rlang::parse_exprs("while(r == 5) { x <- 7 }\n f <- 6")
if(x == 6;) 45
rlang::parse_exprs("while(r == 5;) 45"
)
rlang::parse_exprs("while(r == 5;) 45")
rlang::parse_exprs("while(r == 5) {45;};")
rlang::parse_exprs("while(r == 5) {45;};")
rlang::parse_exprs("while(r == 5) (45);")
rlang::parse_exprs("while(r == 5) (45;);")
if(TRUE)
while TRUE
while(TRUE)
+
5
c(1,2,3)[]
c(1,2,3)[
5
foo(
t
=
4
)
rlang::parse_exprs("4 %asdf% 6")
rlang::parse_exprs("4 %as  df% 6")
rlang::parse_exprs("4 % % 6")
rlang::parse_exprs("4 % 7 % 6")
rlang::parse_exprs("4 %% 7 % 6")
rlang::parse_exprs("4 %% 7 %6")
rlang::parse_exprs("4 %%76")
rlang::parse_exprs("4 %% 76")
if
(
TRUE
)
5
else
if
(
TRUE
)
5
else
if
(
TRUE
)
5
else
if
(
TRUE
)
5
else
if
(
TRUE
)
5
else
if
(
TRUE
)
5
else
if
(
TRUE
)
5 else
4
if
(
TRUE
)
{
5
}
else
if
(
TRUE
)
{
5
} else
4
if
(
TRUE
)
{
5
}  else
4
rlang::parse_exprs("repeat\n\n\n6")
rlang::parse_exprs("f(3\n+4)")
rlang::parse_exprs("{3\n+4}")
rlang::parse_exprs("f({3\n+4})")
rlang::parse_exprs("f({3\n+4})")
f(3)
f(3
4)
c(3
+4)
rlang::parse_exprs("while(3 \n + 4) 3 \n + 4")
rlang::parse_exprs("(3 \n + 4) 3 \n + 4")
rlang::parse_exprs("(3 \n + 4); 3 \n + 4")
